#include <stdio.h>

void knapsack(int n, float profit[], float weight[], int capacity, float object[]) 
{
    float xi[20], total_profit = 0;
    int i, j;
    for (i = 0; i < n; i++) 
	{
        xi[i] = 0;
    }
    for (i = 0; i < n; i++) 
	{
        if (weight[i] > capacity) 
		{
            break;
        }
        xi[i] = 1.0;  
        total_profit += profit[i];
        capacity -= weight[i];
    }
    if (i < n) 
	{
        xi[i] = (float)capacity / weight[i];  
    }
    total_profit += xi[i] * profit[i];
    
    for (i = 0; i < n; i++) 
	{
        for (j = i + 1; j < n; j++) 
		{
            if (object[i] > object[j]) 
			{
                float temp = object[j];
                object[j] = object[i];
                object[i] = temp;
                temp = xi[j];
                xi[j] = xi[i];
                xi[i] = temp;
            }
        }
    }
    
    printf("\nThe knapsack sequence is: ");
    for (i = 0; i < n; i++) {
        printf("%f\t", xi[i]);
    }
    printf("\nThe maximum profit of the given objects is: %f\n", total_profit);
}

int main() 
{
    float object[20];
    float profit[20];
    float weight[20];
    float ratio[20];
    int capacity;
    int n, i, j;
    
    printf("Please enter the number of elements/objects: ");
    scanf("%d", &n);
    
    if (n > 20) 
	{
        printf("Number of elements exceeds array size. Please use a smaller number.\n");
        return 1;
    }
    
    printf("Please enter the capacity of the knapsack: ");
    scanf("%d", &capacity);
    
    if (capacity <= 0) 
	{
        printf("Capacity should be a positive value.\n");
        return 1;
    }
    printf("Please enter number, weight, and profit of objects:\n");
    for (i = 0; i < n; i++) 
	{
        scanf("%f %f %f", &object[i], &weight[i], &profit[i]);
    }
    for (i = 0; i < n; i++) 
	{
        ratio[i] = profit[i] / weight[i];
    }
    for (i = 0; i < n; i++) 
	{
        for (j = i + 1; j < n; j++) 
		{
            if (ratio[i] < ratio[j]) 
			{
                float temp = ratio[j];
                ratio[j] = ratio[i];
                ratio[i] = temp;
                temp = weight[j];
                weight[j] = weight[i];
                weight[i] = temp;
                temp = profit[j];
                profit[j] = profit[i];
                profit[i] = temp;
                temp = object[j];
                object[j] = object[i];
                object[i] = temp;
            }
        }
    }
    
    knapsack(n, profit, weight, capacity, object);
    return 0;
}



